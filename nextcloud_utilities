#!/bin/bash

# shellcheck source=src/common/utilities/common_utilities
source common_utilities

export NEXTCLOUD_CONFIG_DIR="$SNAP_DATA/nextcloud/config"
export NEXTCLOUD_DATA_DIR="$SNAP_COMMON/nextcloud/data"
DEFAULT_CRONJOB_INTERVAL="5m"

nextcloud_is_configured()
{
	[ -d "$NEXTCLOUD_CONFIG_DIR" ]
}

wait_for_nextcloud_to_be_configured()
{
	wait_for_command "Waiting for Nextcloud to be configured" nextcloud_is_configured
}

# Nextcloud doesn't consider itself "installed" until the admin account has been created
nextcloud_is_installed()
{
	# Urgh, occ still prints text warnings even with JSON output. Thus fromjson?.
	installed="$(nextcloud.occ -n status --output=json | jq -R 'fromjson? | .installed')"
	[ "$installed" = "true" ]
}

wait_for_nextcloud_to_be_installed()
{
	wait_for_command "Waiting for Nextcloud to be installed" nextcloud_is_installed
}

# nextcloud_notify_admins <short message> <long message>
nextcloud_notify_admins()
{
	if ! occ app:list --output=json | jq -eR 'fromjson? | .enabled | .notifications' > /dev/null; then
		echo "Notifications app isn't enabled-- unable to send notification" >&2
		return 1
	fi

	occ user:list --output=json | jq -rR 'fromjson? | keys[]' | while read -r user; do
		if occ user:info --output=json "$user" | jq -eR 'fromjson? | .groups | index("admin")' > /dev/null; then
			occ notification:generate "$user" "$1" -l "$2"
		fi
	done
}

cronjob_interval()
{
	interval="$(snapctl get nextcloud.cron-interval)"
	if [ -z "$interval" ]; then
		interval="$DEFAULT_CRONJOB_INTERVAL"
		set_cronjob_interval "$interval"
		set_previous_cronjob_interval "$interval"
	fi

	echo "$interval"
}

previous_cronjob_interval()
{
	snapctl get private.nextcloud.cron-interval
}

set_cronjob_interval()
{
	snapctl set nextcloud.cron-interval="$1"
}

set_previous_cronjob_interval()
{
	snapctl set private.nextcloud.cron-interval="$1"
}
